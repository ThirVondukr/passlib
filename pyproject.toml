[project]
name = "libpass"
version = "1.7.5.post0"
description = "Fork of passlib, a comprehensive password hashing framework supporting over 30 schemes"
authors = [
    { name = "Eli Collins", email = "elic@assurancetechnologies.com" },
]
maintainers = [
    { name = "Doctor", email = "thirvondukr@gmail.com" },
]
dependencies = [
    "legacycrypt>=0.3",
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "BSD" }
keywords = [
    "passlib",
    "password",
    "secret",
    "hash",
    "security",
    "crypt",
    "md5-crypt",
    "sha256-crypt",
    "sha512-crypt",
    "pbkdf2",
    "argon2",
    "scrypt",
    "bcrypt",
    "apache",
    "htpasswd",
    "htdigest",
    "totp",
    "2fa",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries",
]

[project.urls]
Repository = "https://github.com/ThirVondukr/passlib"
Docs = "https://passlib.readthedocs.io"

[project.optional-dependencies]
argon2 = [
    "argon2-cffi>=18.2.0",
]
bcrypt = [
    "bcrypt>=3.1.0",
]
totp = [
    "cryptography>=43.0.1",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true


[tool.pdm.dev-dependencies]
linters = [
    "deptry>=0.20.0",
    "mypy>=1.11.2",
    "ruff>=0.6.4",
]
testing = [
    "coverage>=7.6.1",
    "pytest>=8.3.3",
    "typeguard>=4.3.0",
]
django = [
    "django>=4.2.16",
]
types = [
    "django-stubs>=5.0.4",
]
sphinx-docs = [
    "sphinx>=7.4.7",
    "cloud-sptheme>=1.10.1.post20200504175005",
    "sphinxcontrib-fulltoc>=1.2.0",
]

[tool.coverage.run]
source = ["passlib"]
omit = [""]
command_line = "-m pytest -v"
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "class .*\\(.*\\bProtocol\\b.*\\):",
    "@(?:typing\\.)?overload",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2
fail_under = 0

[tool.deptry]
known_first_party = ["passlib"]


[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "F",
    "E",
    "W",
    "PT",
    "UP",
    "I",
#    "N",
]
unfixable = ["F401"]
ignore = ["PT011", "E501"]

[tool.ruff.lint.per-file-ignores]
"passlib/hash.py" = ["F401"]
"passlib/crypto/_blowfish/base.py" = ["E741"]
"passlib/crypto/_blowfish/unrolled.py" = ["E741"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.7.5.post0"
tag_format = "$version"
update_changelog_on_bump = true
version_files = [
    "passlib/__init__.py",
    "pyproject.toml:version"
]


[tool.mypy]
python_version = "3.9"

[tool.pytest.ini_options]
addopts = "-W error::Warning"
